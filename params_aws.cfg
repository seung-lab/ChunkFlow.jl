[gn]
# general section
# temporary folder in local node, please do not change this for spipe-service in AWS
tmp_dir = /tmp/

# output folder
outdir = s3://spipe-service/outputs/

# raw image file name,
# gray image, bit depth should be 8
# support tif and hdf5 (dataset name is "/main")
fimg = s3://spipe-service/assets/img.h5

# voxel size: x,y,z
voxel_size = 4,4,40

# affinity file, default: out_sample1_output.h5 in tmp folder
# no need to change this in AWS
faffs = /tmp/affs.h5

# segmentation with dendrogram
fsegm = /tmp/segm.h5

# shutdown maching after pipeline: yes | no
# if you run it in aws, please always set it as yes
is_auto_shutdown = yes

[znn]
# whether to run forward pass
is_znn = yes

### znn forward
# directory of znn
dir = /opt/znn-release

# net architecture specifications
fnet_specs = s3://znn/networks/VD2D.znn, s3://znn/networks/W3_VD2D3D_AR.znn

# networks
fnets = s3://znn/experiments/allen/0311_VD2D/net_current.h5, s3://znn/experiments/allen/0318_W3/net_current.h5

# standard io, this should match with the setting in znn training config.cfg file
# default is no
is_stdio = yes

# output size of each epoch, z,y,x
outszs = 3, 100, 100; 3, 100, 100

# whether overwrite the existing affinity file or not
# options: yes, no
is_overwrite = yes

[ws]
# watershed section
# weather to run watershed or not
is_watershed = yes

# exchange x and z channel or not
# current network output affinity as z,y,x, so we need to exchange x and z channel to  make sure that the affinity is organized as x,y,z
is_exchange_affs_xz = no
# whether remap to uniform distribution or not
# options: yes, no
is_remap = yes
# watershed parameters
high = 0.80
low = 0.3
# thresholds example: 256,0.3; 500,0.5
thresholds = 1000,0.3
dust = 2000

[agg]
# use mean affinity agglomeration or not
is_agg = yes

[omni]
# weather to do omnification or not
is_omni = yes

# the path of omnify executable file
# if running pipeline in AWS, set it as `/opt/omni`
ombin = /opt/omni

# fomprj = s3://spipe-service/omni_prjs/tmp.omni
